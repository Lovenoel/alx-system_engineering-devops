#!/usr/bin/env bash
# Duplicate web-01 to web-02
# This script automates the setup of a basic Nginx server with custom
# configurations.

# Uncomment to enable debugging output
#set -x

echo -e "Updating and doing some minor checks...\n"

# Function to install packages if not already installed
function install() {
    command -v "$1" &> /dev/null

    # Check if the command is available
    if [ $? -ne 0 ]; then
        echo -e "Installing: $1\n"
        # Update package index and install the package
        sudo apt-get update -y -qq && \
        sudo apt-get install -y "$1" -qq
        echo -e "\n"
    else
        echo -e "${1} is already installed.\n"
    fi
}

# Install Nginx
install nginx

echo -e "\nSetting up some minor stuff.\n"

# Allow Nginx through the firewall
sudo ufw allow 'Nginx HTTP'

# Set ownership and permissions for website files
if [ -d "/var/www" ]; then
    sudo chown -R "$USER":"$USER" /var/www
    sudo chmod -R 755 /var/www
else
    sudo mkdir -p /var/www
    sudo chown -R "$USER":"$USER" /var/www
    sudo chmod -R 755 /var/www
fi

# Create directories if not present
for dir in /var/www/{html,error}; do
    if ! [ -d "$dir" ]; then
        mkdir -p "$dir"
    fi
done

# Create index.html with "Hello World!" content
echo "Hello World!" > /var/www/html/index.html

# Create error_404.html with custom message
echo "Ceci n'est pas une page" > /var/www/html/error_404.html

# Backup default server config file
sudo cp /etc/nginx/sites-enabled/default nginx-sites-enabled_default.backup

# Custom server configuration block
server_config=\
"server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
    server_name _;
    add_header X-Served-By \$hostname; # Add custom HTTP response header
    location / {
        try_files \$uri \$uri/ =404;
    }
    if (\$request_filename ~ redirect_me){
        rewrite ^ https://th3-gr00t.tk/ permanent;
    }
    error_page 404 /error_404.html;
    location = /error_404.html {
        internal;
    }
}"

# Write custom server configuration to Nginx config file
echo "$server_config" | sudo dd status=none of=/etc/nginx/sites-enabled/default

# Restart Nginx service
if [ "$(pgrep -c nginx)" -le 0 ]; then
    sudo service nginx start
else
    sudo service nginx restart
fi

echo "Web server configuration completed."
